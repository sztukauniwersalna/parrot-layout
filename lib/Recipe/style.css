.recipe {
  display: block;
  width: 100vw;
  margin-left: calc(50% - 50vw);
}

.details,
.header {
  box-sizing: border-box;
  width: 100%;
  padding-left: 5rem;
  padding-right: 5rem;
  margin: 0;
}

@media only screen and (min-width:836px) and (max-width:1019px) {
  .details,
  .header {
    width: 764px;
    margin: 0 auto;
  }
}

@media only screen and (min-width:1020px) {
  .details,
  .header {
    width: 932px;
    margin: 0 auto;
  }
}

.recipe {
  margin-top: 4rem;
  background-color: #303030;
}

@media only screen and (min-width:1020px) {
  .recipe {
    margin-top: 7rem;
  }
}

.header {
  padding-top: 7rem;
}

@media only screen and (min-width:1020px) {
  .header {
    padding-top: 12rem;
  }
}

.header ul,
:not(ol) .header ul,
:not(ul) .header ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-wrap: wrap;
  max-width: 100%;
  margin-top: -7rem;
  margin-bottom: -1rem;
  flex-wrap: nowrap;
  line-height: 7rem;
  padding-top: 2.06rem;
  padding-bottom: 4.94rem;
}

.header ul li,
:not(ol) .header ul li,
:not(ul) .header ul li {
  margin: 0;
  padding: 0;
  display: flex;
  max-width: 100%;
}

.header ul li:before,
:not(ol) .header ul li:before,
:not(ul) .header ul li:before {
  content: "";
  margin: 0;
  padding: 0;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  text-align: left;
  vertical-align: inherit;
  width: auto;
  height: auto;
  position: static;
  opacity: 1;
}

@media only screen and (min-width:1020px) {
  .header ul,
  :not(ol) .header ul,
  :not(ul) .header ul {
    line-height: 9rem;
    padding-top: 2.7rem;
    padding-bottom: 6.3rem;
  }
}

.header ul li,
:not(ol) .header ul li,
:not(ul) .header ul li {
  font-family: Roboto Slab,serif;
  font-weight: 500;
  letter-spacing: -.003rem;
  font-size: 16px;
  white-space: nowrap;
  padding-right: 2rem;
}

@media only screen and (min-width:1020px) {
  .header ul li,
  :not(ol) .header ul li,
  :not(ul) .header ul li {
    font-size: 20px;
  }
}

@media only screen and (min-width:568px) and (max-width:835px) {
  .header ul li,
  :not(ol) .header ul li,
  :not(ul) .header ul li {
    padding-right: 4rem;
  }
}

@media only screen and (min-width:836px) and (max-width:1019px) {
  .header ul li,
  :not(ol) .header ul li,
  :not(ul) .header ul li {
    padding-right: 4rem;
  }
}

@media only screen and (min-width:1020px) {
  .header ul li,
  :not(ol) .header ul li,
  :not(ul) .header ul li {
    padding-right: 4rem;
  }
}

.header ul i,
:not(ol) .header ul i,
:not(ul) .header ul i {
  margin-right: 1rem;
  font-size: 27px;
  opacity: .9;
}

@media only screen and (min-width:568px) and (max-width:835px) {
  .header ul i,
  :not(ol) .header ul i,
  :not(ul) .header ul i {
    margin-right: 2rem;
  }
}

@media only screen and (min-width:836px) and (max-width:1019px) {
  .header ul i,
  :not(ol) .header ul i,
  :not(ul) .header ul i {
    margin-right: 2rem;
  }
}

@media only screen and (min-width:1020px) {
  .header ul i,
  :not(ol) .header ul i,
  :not(ul) .header ul i {
    margin-right: 2rem;
    font-size: 33px;
  }
}

.details {
  padding-top: 1rem;
  padding-bottom: 9rem;
}

@media only screen and (min-width:1020px) {
  .details {
    padding-bottom: 13rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */