.topBar {
  box-sizing: border-box;
  width: 100%;
  padding-left: 5rem;
  padding-right: 5rem;
  margin: 0;
}

@media only screen and (min-width:836px) and (max-width:1019px) {
  .topBar {
    width: 764px;
    margin: 0 auto;
  }
}

@media only screen and (min-width:1020px) {
  .topBar {
    width: 932px;
    margin: 0 auto;
  }
}

.topBar {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  padding: 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-direction: row;
}

@media only screen and (min-width:836px) and (max-width:1019px) {
  .topBar {
    padding: 3rem 2rem;
  }
}

@media only screen and (min-width:1020px) {
  .topBar {
    padding: 4rem 2rem;
  }
}

.hamburger {
  display: flex;
}

@media only screen and (min-width:836px) and (max-width:1019px) {
  .hamburger {
    display: none;
  }
}

@media only screen and (min-width:1020px) {
  .hamburger {
    display: none;
  }
}

.hamburger button {
  height: 12rem!important;
}

.hamburger i {
  font-size: 7rem;
  line-height: 12rem;
  color: rgba(51,51,51,.72);
}

.inlineLogo {
  display: none;
}

@media only screen and (min-width:1020px) {
  .inlineLogo {
    display: flex;
  }
}

.smallLogo {
  padding-left: 1rem;
  display: flex;
}

@media only screen and (min-width:1020px) {
  .smallLogo {
    display: none;
  }
}

.title,
.topMenu {
  display: none;
}

.topMenu ul,
:not(ol) .topMenu ul,
:not(ul) .topMenu ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-wrap: wrap;
  max-width: 100%;
  margin: 1rem 0;
}

.topMenu ul li,
:not(ol) .topMenu ul li,
:not(ul) .topMenu ul li {
  margin: 0;
  padding: 0;
  display: flex;
  max-width: 100%;
}

.topMenu ul li:before,
:not(ol) .topMenu ul li:before,
:not(ul) .topMenu ul li:before {
  content: "";
  margin: 0;
  padding: 0;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  text-align: left;
  vertical-align: inherit;
  width: auto;
  height: auto;
  position: static;
  opacity: 1;
}

.topMenu a:active,
.topMenu a:hover {
  background: rgba(51,51,51,.05);
}

@media only screen and (min-width:836px) and (max-width:1019px) {
  .topMenu {
    display: flex;
  }
}

@media only screen and (min-width:1020px) {
  .topMenu {
    display: flex;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */