.button {
  display: inline-flex;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.button a,
.button button {
  height: 10rem;
  font-family: Roboto Slab,serif;
  font-weight: 700;
  letter-spacing: -.003rem;
  font-size: 16px;
  line-height: 10rem;
  text-transform: uppercase;
  text-align: center;
  border: 0;
  display: block;
  cursor: pointer;
}

.button a:active,
.button a:hover,
.button a:link,
.button a:visited,
.button button:active,
.button button:hover,
.button button:link,
.button button:visited {
  text-decoration: none;
}

.action a,
.action button,
.flat a,
.flat button,
.raised a,
.raised button {
  background-color: transparent;
  padding: 0 3rem;
}

.action a:active,
.action a:hover,
.action a:link,
.action a:visited,
.action button:active,
.action button:hover,
.action button:link,
.action button:visited,
.flat a:active,
.flat a:hover,
.flat a:link,
.flat a:visited,
.flat button:active,
.flat button:hover,
.flat button:link,
.flat button:visited,
.raised a:active,
.raised a:hover,
.raised a:link,
.raised a:visited,
.raised button:active,
.raised button:hover,
.raised button:link,
.raised button:visited {
  color: rgba(51,51,51,.9);
}

:global(.contrast) .action a:active,
:global(.contrast) .action a:hover,
:global(.contrast) .action a:link,
:global(.contrast) .action a:visited,
:global(.contrast) .action button:active,
:global(.contrast) .action button:hover,
:global(.contrast) .action button:link,
:global(.contrast) .action button:visited,
:global(.contrast) .flat a:active,
:global(.contrast) .flat a:hover,
:global(.contrast) .flat a:link,
:global(.contrast) .flat a:visited,
:global(.contrast) .flat button:active,
:global(.contrast) .flat button:hover,
:global(.contrast) .flat button:link,
:global(.contrast) .flat button:visited,
:global(.contrast) .raised a:active,
:global(.contrast) .raised a:hover,
:global(.contrast) .raised a:link,
:global(.contrast) .raised a:visited,
:global(.contrast) .raised button:active,
:global(.contrast) .raised button:hover,
:global(.contrast) .raised button:link,
:global(.contrast) .raised button:visited {
  color: hsla(0,0%,100%,.9);
}

.action a,
.action button,
.raised a,
.raised button {
  box-shadow: 1px 1px 3px rgba(0,0,0,.4);
}

.action a,
.action button {
  width: 14rem;
  height: 14rem;
  box-sizing: border-box;
  padding: 4rem;
  text-align: center;
  border-radius: 50%;
  overflow: hidden;
  text-overflow: ellipsis;
}

.action :global(.material-icons) {
  display: block;
  position: relative;
  top: -1px;
}

.green a,
.green button {
  background-color: #2caa3e;
}

.green a:active,
.green a:hover,
.green a:link,
.green a:visited,
.green button:active,
.green button:hover,
.green button:link,
.green button:visited {
  color: hsla(0,0%,100%,.9);
}

.purple a,
.purple button {
  background-color: #9f2bd8;
}

.purple a:active,
.purple a:hover,
.purple a:link,
.purple a:visited,
.purple button:active,
.purple button:hover,
.purple button:link,
.purple button:visited {
  color: hsla(0,0%,100%,.9);
}

.gray a,
.gray button {
  background-color: #a5a5a5;
}

.gray a:active,
.gray a:hover,
.gray a:link,
.gray a:visited,
.gray button:active,
.gray button:hover,
.gray button:link,
.gray button:visited {
  color: hsla(0,0%,100%,.9);
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */