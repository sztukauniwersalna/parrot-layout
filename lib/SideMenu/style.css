.panel {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  position: absolute;
  top: 0;
  transition: left .2s ease-out;
  left: -100%;
  width: calc(100% - 14rem);
  max-width: 80rem;
  height: 100vh;
  overflow: hidden;
  background: #f1f1f1;
  box-shadow: 0 0 4px #000;
  display: flex;
  flex-direction: column;
}

.panel.visible {
  left: 0;
}

.header {
  height: 63rem;
  max-height: 63rem;
  min-height: 14rem;
  background: url(./abstract_7.jpg) 50% no-repeat;
  background-size: cover;
}

.content,
.header {
  display: flex;
  flex-direction: column;
}

.content {
  flex-shrink: 0;
  margin: 0;
  padding: 2rem 0;
  align-items: stretch;
}

.content li {
  margin: 0;
  padding: 0;
  display: block;
}

.content li:before {
  display: none;
}

.content a {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  cursor: pointer;
  margin: 0;
  padding: 0 4rem;
  display: flex;
  flex-direction: row;
  align-items: center;
  text-decoration: none;
}

.content:not(:hover) .current a,
.content a:active,
.content a:hover {
  background-color: #fff;
}

.itemIcon {
  margin-right: 8rem;
  width: 6rem;
  flex-shrink: 0;
  flex-grow: 0;
  align-self: stretch;
  color: rgba(51,51,51,.6);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}

.itemTitle {
  flex-shrink: 0;
  flex-grow: 1;
  color: rgba(51,51,51,.9);
  font-family: Roboto Slab,serif;
  font-weight: 400;
  letter-spacing: -.003rem;
  font-size: 16px;
  line-height: 6rem;
  padding-top: 3.56rem;
  padding-bottom: 3.44rem;
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@media only screen and (min-width:1020px) {
  .itemTitle {
    font-size: 20px;
    line-height: 7rem;
    padding-top: 3.7rem;
    padding-bottom: 4.3rem;
  }
}

.closeButton {
  align-self: flex-end;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  background-color: #f1f1f1;
}

.closeButton i {
  font-size: 6rem;
  line-height: 12.5rem;
  color: rgba(51,51,51,.72);
}

.closeButton,
.closeButton button {
  height: 14rem;
  width: 14rem;
  text-align: center;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */